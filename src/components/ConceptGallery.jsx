import { motion, AnimatePresence } from 'framer-motion'
import { useState } from 'react'
import { FaStar, FaFilter } from 'react-icons/fa'
import Stars from './canvas/Stars'

const ConceptGallery = () => {
  const [selectedConcept, setSelectedConcept] = useState(null)
  const [filter, setFilter] = useState('all')
  
  const categories = [
    { id: 'all', name: 'ุงููู' },
    { id: 'web', name: 'ููุงูุน ููุจ' },
    { id: 'mobile', name: 'ุชุทุจููุงุช ููุจุงูู' },
    { id: 'design', name: 'ุชุตููู' }
  ]

  const concepts = [
    {
      id: 1,
      title: 'ูุงููู ุนุตุฑู',
      category: 'web',
      rating: 4.8,
      skills: [
        { name: 'ุชุตููู ูุงุฌูุฉ ุงููุณุชุฎุฏู', progress: 95 },
        { name: 'ุชุฌุฑุจุฉ ุงููุณุชุฎุฏู', progress: 90 },
        { name: 'ุงูุฃุฏุงุก', progress: 85 }
      ],
      description: 'ุชุฌุฑุจุฉ ุฑูููุฉ ูุฑูุฏุฉ ููุงููู ุนุตุฑูุ ุชุฌูุน ุจูู ุงูุณุฑุนุฉ ูุงูุฃูุงูุฉ. ูููุน ูุชููุฒ ุจุฃุฏุงุก ูุงุฆู ููุงุฌูุฉ ุณูุณุฉ ุชุถูู ุชุฌุฑุจุฉ ุญุฌุฒ ูุทูุจ ูููุฒุฉ ููู ุฒุงุฆุฑ',
      features: [
        'ุญุฌุฒ ููุฑู ููุทุงููุงุช ูุน ุชุฃููุฏ ูุญุธู',
        'ูุงุฆูุฉ ุทุนุงู ุฐููุฉ ูุน ุชูุตูุงุช ุดุฎุตูุฉ',
        'ูุธุงู ุทูุจ ุณุฑูุน ูุน ุชุชุจุน ูุจุงุดุฑ',
        'ุจุฑูุงูุฌ ููุงุก ูุชุทูุฑ ูุน ููุงูุขุช ููุฑูุฉ',
        'ุฏุนู ููู ุนูู ูุฏุงุฑ ุงูุณุงุนุฉ',
        'ุชุญุฏูุซุงุช ูุณุชูุฑุฉ ูููุญุชูู ูุงูุนุฑูุถ'
      ],
      performance: [
        'ุชุญููู ูุงุฆู ุงูุณุฑุนุฉ ููุตูุญุงุช',
        'ุชุฌุฑุจุฉ ุณูุณุฉ ุนูู ุฌููุน ุงูุฃุฌูุฒุฉ',
        'ุชุญุฏูุซุงุช ููุฑูุฉ ูููุนูููุงุช'
      ],
      mockupPreview: 'ุชุตููู ุนุตุฑู ูุฑูุฒ ุนูู ุชุฌุฑุจุฉ ุงููุณุชุฎุฏู',
      color: 'from-purple-900 to-indigo-900',
      icon: 'โ',
      timeline: '1-2 ุฃุณุงุจูุน'
    },
    {
      id: 2,
      title: 'ุดุฑูุฉ ุชูููุฉ',
      category: 'web',
      rating: 4.9,
      skills: [
        { name: 'ุจุฑูุฌุฉ ูุชูุฏูุฉ', progress: 95 },
        { name: 'ุชุญุณูู ูุญุฑูุงุช ุงูุจุญุซ', progress: 90 },
        { name: 'ุฃูุงู ุงูููุงูุน', progress: 95 }
      ],
      description: 'ููุตุฉ ุชูููุฉ ูุชุทูุฑุฉ ุชูุฏู ุชุฌุฑุจุฉ ูุณุชุฎุฏู ุงุณุชุซูุงุฆูุฉ. ูุฑูุฒ ุนูู ุงูุฃุฏุงุก ุงูุนุงูู ูุงูุชูุงุนู ุงูุณูุณ ูุน ุถูุงู ุฏุนู ููู ูุชููุฒ ุนูู ูุฏุงุฑ ุงูุณุงุนุฉ',
      features: [
        'ุนุฑุถ ูุดุงุฑูุน ุชูุงุนูู ูุน ุชุฃุซูุฑุงุช ุณูุณุฉ',
        'ูุธุงู ุชูุงุตู ูุจุงุดุฑ ูุน ุงููุฑูู',
        'ููุตุฉ ุฎุฏูุงุช ูุชูุงููุฉ ูุณุฑูุนุฉ',
        'ูุธุงู ุญุฌุฒ ููุงุนูุฏ ุฐูู',
        'ุชุญุฏูุซุงุช ูุณุชูุฑุฉ ูููุญุชูู',
        'ุฏุนู ููู ูุชุฎุตุต 24/7'
      ],
      performance: [
        'ุฃุฏุงุก ุนุงูู ุนูู ุฌููุน ุงููุชุตูุญุงุช',
        'ุชุญููู ุณุฑูุน ูููุญุชูู ุงูุชูุงุนูู',
        'ุงุณุชุฌุงุจุฉ ููุฑูุฉ ูุทูุจุงุช ุงููุณุชุฎุฏู'
      ],
      mockupPreview: 'ูุงุฌูุฉ ูุชุทูุฑุฉ ูุน ุฃุฏุงุก ูุงุฆู',
      color: 'from-blue-900 to-violet-900',
      icon: '๐ป',
      timeline: '2-3 ุฃุณุงุจูุน'
    },
    {
      id: 3,
      title: 'ูุชุฌุฑ ุฅููุชุฑููู',
      category: 'web',
      rating: 4.7,
      skills: [
        { name: 'ุชุทููุฑ ุงููุชุงุฌุฑ', progress: 90 },
        { name: 'ุฃูุธูุฉ ุงูุฏูุน', progress: 95 },
        { name: 'ุชุญุณูู ุงูุฃุฏุงุก', progress: 85 }
      ],
      description: 'ููุตุฉ ุชุณูู ูุชุทูุฑุฉ ุชูุฏู ุชุฌุฑุจุฉ ุดุฑุงุก ุณุฑูุนุฉ ูุขููุฉ. ูุถูู ุฃุฏุงุกู ุนุงููุงู ูุณุฑุนุฉ ุชุญููู ูุงุฆูุฉ ูุน ุฏุนู ููู ูุชูุงุตู ูุถูุงู ุชุฌุฑุจุฉ ุชุณูู ูุซุงููุฉ',
      features: [
        'ุชุตูุญ ุณุฑูุน ูุน ููุชุฑุฉ ุฐููุฉ',
        'ุณูุฉ ุชุณูู ูุชุทูุฑุฉ ูุน ุญูุธ ุชููุงุฆู',
        'ูุธุงู ุฏูุน ุขูู ููุชุนุฏุฏ ุงูุฎูุงุฑุงุช',
        'ูุชุงุจุนุฉ ูุจุงุดุฑุฉ ููุทูุจุงุช',
        'ูุธุงู ุชูุตูุงุช ุฐูู',
        'ุฏุนู ููู ูุชูุงุตู ูููุณุงุนุฏุฉ'
      ],
      performance: [
        'ุชุญููู ููุฑู ูุตูุฑ ุงูููุชุฌุงุช',
        'ุจุญุซ ุณุฑูุน ูุน ูุชุงุฆุฌ ููุฑูุฉ',
        'ูุนุงูุฌุฉ ุขููุฉ ูุณุฑูุนุฉ ูููุฏููุนุงุช'
      ],
      mockupPreview: 'ุชุตููู ุนุตุฑู ูุฑูุฒ ุนูู ุณูููุฉ ุงูุชุณูู',
      color: 'from-indigo-900 to-purple-900',
      icon: '๐๏ธ',
      timeline: '2 ุฃุณุงุจูุน'
    }
  ]

  const filteredConcepts = filter === 'all' ? concepts : concepts.filter(c => c.category === filter)

  const CircularProgress = ({ progress, size = 60 }) => (
    <div className="relative" style={{ width: size, height: size }}>
      <svg className="transform -rotate-90" width={size} height={size}>
        <circle
          cx={size / 2}
          cy={size / 2}
          r={(size - 10) / 2}
          stroke="currentColor"
          strokeWidth="4"
          fill="transparent"
          className="text-gray-700"
        />
        <circle
          cx={size / 2}
          cy={size / 2}
          r={(size - 10) / 2}
          stroke="currentColor"
          strokeWidth="4"
          fill="transparent"
          strokeDasharray={((size - 10) / 2) * Math.PI * 2}
          strokeDashoffset={((100 - progress) / 100) * ((size - 10) / 2) * Math.PI * 2}
          className="text-blue-500 transition-all duration-1000 ease-out"
        />
      </svg>
      <span className="absolute inset-0 flex items-center justify-center text-sm font-semibold">
        {progress}%
      </span>
    </div>
  )

  const StarRating = ({ rating }) => (
    <div className="flex items-center space-x-1 flex-row-reverse">
      {[...Array(5)].map((_, i) => (
        <FaStar
          key={i}
          className={`${
            i < Math.floor(rating) ? 'text-yellow-400' : 'text-gray-400'
          } ${i === Math.floor(rating) && rating % 1 > 0 ? 'text-yellow-400 opacity-50' : ''}`}
        />
      ))}
      <span className="mr-2 text-gray-300">{rating}</span>
    </div>
  )

  return (
    <motion.div 
      initial={{ opacity: 0 }}
      animate={{ opacity: 1 }}
      exit={{ opacity: 0 }}
      className="min-h-screen bg-[#0a0a0f] text-white py-16 px-4 md:px-8 relative overflow-hidden"
    >
      <Stars />
      
      <motion.h1 
        initial={{ y: -50 }}
        animate={{ y: 0 }}
        className="text-4xl md:text-5xl font-bold text-center mb-4 bg-clip-text text-transparent bg-gradient-to-r from-purple-400 to-blue-500"
      >
        ูุนุฑุถ ุงูุชุตุงููู ุงููุณุชูุจููุฉ
      </motion.h1>
      
      <motion.p
        initial={{ opacity: 0 }}
        animate={{ opacity: 1 }}
        transition={{ delay: 0.2 }}
        className="text-gray-400 text-center mb-8 max-w-2xl mx-auto"
      >
        ููุฏู ุชุฌุฑุจุฉ ุฑูููุฉ ูุฑูุฏุฉ ุชุฌูุน ุจูู ุงูุฃุฏุงุก ุงูุนุงูู ูุงูุชุตููู ุงููุชููุฒ
      </motion.p>

      <div className="flex justify-center mb-8 space-x-4 flex-row-reverse">
        {categories.map(category => (
          <motion.button
            key={category.id}
            onClick={() => setFilter(category.id)}
            className={`px-4 py-2 rounded-full flex items-center space-x-2 transition-all duration-300 ${
              filter === category.id
                ? 'bg-blue-600 text-white'
                : 'bg-gray-800 text-gray-300 hover:bg-gray-700'
            }`}
            whileHover={{ scale: 1.05 }}
            whileTap={{ scale: 0.95 }}
          >
            <FaFilter className="ml-2" />
            <span>{category.name}</span>
          </motion.button>
        ))}
      </div>

      <div className="max-w-7xl mx-auto grid grid-cols-1 md:grid-cols-2 lg:grid-cols-3 gap-8">
        <AnimatePresence>
          {filteredConcepts.map((concept, index) => (
            <motion.div
              key={concept.id}
              initial={{ opacity: 0, y: 50 }}
              animate={{ opacity: 1, y: 0 }}
              exit={{ opacity: 0, y: -50 }}
              transition={{ delay: index * 0.1 }}
              className="relative group"
            >
              <div 
                className={`p-6 rounded-xl bg-gradient-to-br ${concept.color} bg-opacity-20 backdrop-blur-sm
                           border border-gray-800 hover:border-gray-600 transition-all duration-300
                           transform hover:scale-105 cursor-pointer h-full shadow-xl`}
                onClick={() => setSelectedConcept(concept)}
              >
                <div className="flex justify-between items-start mb-4">
                  <div className="text-4xl">{concept.icon}</div>
                  <StarRating rating={concept.rating} />
                </div>
                <h3 className="text-xl font-semibold mb-3">{concept.title}</h3>
                <p className="text-gray-300 mb-4 line-clamp-3">{concept.description}</p>
                <div className="space-y-4">
                  <div>
                    <h4 className="text-sm font-semibold text-gray-200 mb-2">ุงููููุฒุงุช ุงูุฑุฆูุณูุฉ</h4>
                    <ul className="space-y-2">
                      {concept.features.slice(0, 3).map((feature, i) => (
                        <motion.li
                          key={i}
                          initial={{ opacity: 0, x: -20 }}
                          animate={{ opacity: 1, x: 0 }}
                          transition={{ delay: index * 0.1 + i * 0.1 }}
                          className="flex items-center text-sm text-gray-300"
                        >
                          <span className="mr-2">โข</span>
                          {feature}
                        </motion.li>
                      ))}
                    </ul>
                  </div>
                  <div className="pt-2 text-sm text-gray-400">
                    ูุฏุฉ ุงูุชูููุฐ: {concept.timeline}
                  </div>
                </div>
              </div>
            </motion.div>
          ))}
        </AnimatePresence>
      </div>

      <AnimatePresence>
        {selectedConcept && (
          <motion.div
            initial={{ opacity: 0 }}
            animate={{ opacity: 1 }}
            exit={{ opacity: 0 }}
            className="fixed inset-0 bg-black bg-opacity-90 flex items-center justify-center p-4 z-50"
            onClick={() => setSelectedConcept(null)}
          >
            <motion.div
              initial={{ scale: 0.9, opacity: 0 }}
              animate={{ scale: 1, opacity: 1 }}
              exit={{ scale: 0.9, opacity: 0 }}
              className={`bg-gradient-to-br ${selectedConcept.color} bg-opacity-20 backdrop-blur-lg
                        p-8 rounded-2xl max-w-4xl w-full border border-gray-800 max-h-[90vh] overflow-y-auto
                        shadow-2xl`}
              onClick={e => e.stopPropagation()}
            >
              <div className="flex items-center justify-between mb-6">
                <div className="flex items-center">
                  <div className="text-6xl mr-4">{selectedConcept.icon}</div>
                  <div>
                    <h2 className="text-3xl font-bold">{selectedConcept.title}</h2>
                    <p className="text-gray-400">{selectedConcept.mockupPreview}</p>
                  </div>
                </div>
                <StarRating rating={selectedConcept.rating} />
              </div>
              
              <p className="text-gray-300 mb-8 text-lg">{selectedConcept.description}</p>
              
              <div className="grid grid-cols-1 md:grid-cols-2 gap-8">
                <div>
                  <h3 className="text-xl font-semibold mb-4 text-gray-200">ุงููููุฒุงุช</h3>
                  <ul className="space-y-3">
                    {selectedConcept.features.map((feature, i) => (
                      <motion.li
                        key={i}
                        initial={{ opacity: 0, x: -20 }}
                        animate={{ opacity: 1, x: 0 }}
                        transition={{ delay: i * 0.1 }}
                        className="flex items-center text-gray-300"
                      >
                        <span className="mr-3 text-xl">โข</span>
                        {feature}
                      </motion.li>
                    ))}
                  </ul>
                </div>
                
                <div>
                  <h3 className="text-xl font-semibold mb-4 text-gray-200">ุงูููุงุฑุงุช ูุงูููุงุกุงุช</h3>
                  <div className="space-y-6">
                    {selectedConcept.skills.map((skill, i) => (
                      <div key={i} className="flex items-center justify-between">
                        <span className="text-gray-300 ml-4">{skill.name}</span>
                        <CircularProgress progress={skill.progress} />
                      </div>
                    ))}
                  </div>
                </div>
              </div>

              <div className="mt-8 pt-6 border-t border-gray-700">
                <h3 className="text-xl font-semibold mb-4 text-gray-200">ุงูุฃุฏุงุก ูุงูุณุฑุนุฉ</h3>
                <ul className="space-y-3">
                  {selectedConcept.performance.map((item, i) => (
                    <motion.li
                      key={i}
                      initial={{ opacity: 0, x: 20 }}
                      animate={{ opacity: 1, x: 0 }}
                      transition={{ delay: i * 0.1 }}
                      className="flex items-center text-gray-300"
                    >
                      <span className="mr-3 text-xl">โก</span>
                      {item}
                    </motion.li>
                  ))}
                </ul>
              </div>

              <div className="mt-8 pt-6 border-t border-gray-700">
                <div className="flex justify-between items-center">
                  <span className="text-gray-300">ูุฏุฉ ุงูุชูููุฐ: {selectedConcept.timeline}</span>
                  <button
                    className="px-6 py-2 bg-white bg-opacity-10 rounded-lg hover:bg-opacity-20 transition-all duration-300"
                    onClick={() => setSelectedConcept(null)}
                  >
                    ุฅุบูุงู
                  </button>
                </div>
              </div>
            </motion.div>
          </motion.div>
        )}
      </AnimatePresence>
    </motion.div>
  )
}

export default ConceptGallery
